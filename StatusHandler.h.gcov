        -:    0:Source:src/StatusHandler.h
        -:    0:Graph:src/StatusHandler.gcno
        -:    0:Data:src/StatusHandler.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#ifndef STATUSHANDLER_H
        -:    2:#define STATUSHANDLER_H
        -:    3:
        -:    4:#include "RequestHandler.h"
        -:    5:#include <vector>
        -:    6:#include <utility>
        -:    7:#include <sstream>
        -:    8:#include <map>
        -:    9:#include <mutex>
        -:   10:#include <gtest/gtest_prod.h>
    #####:   11:class StatusHandler : public RequestHandler {
        -:   12:public:
        -:   13:    Status Init(const std::string& uri_prefix, const NginxConfig& config);
        -:   14:    Status HandleRequest(const Request& request, Response* response);
        -:   15:
        -:   16:    static void LogRequest(std::string uri, Response::ResponseCode code);
        -:   17:    static void LogHandler(std::string uri, std::string name);
        -:   18:    static std::vector<std::pair<std::string, Response::ResponseCode >> request_logs_;
        -:   19:    static std::map<std::string, std::string> handlers_name_;
        -:   20:    static std::mutex request_mutex_;
        -:   21:private:
        -:   22:    std::string uri_prefix_;
        -:   23:    FRIEND_TEST(StatusHandler_test,init_test);
        -:   24:};
        -:   25:
        1:   26:REGISTER_REQUEST_HANDLER(StatusHandler);
        -:   27:
        -:   28:#endif
